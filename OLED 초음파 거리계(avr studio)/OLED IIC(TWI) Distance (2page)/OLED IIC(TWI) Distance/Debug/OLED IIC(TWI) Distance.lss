
OLED IIC(TWI) Distance.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000930  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800060  00800060  00000930  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000960  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  0000099c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ee5  00000000  00000000  00000a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c5  00000000  00000000  000018f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000068a  00000000  00000000  00001fb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  00002640  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e9  00000000  00000000  000027f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000913  00000000  00000000  00002bd9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000034ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	42 c2       	rjmp	.+1156   	; 0x486 <__ctors_end>
   2:	68 c3       	rjmp	.+1744   	; 0x6d4 <__vector_1>
   4:	50 c2       	rjmp	.+1184   	; 0x4a6 <__bad_interrupt>
   6:	4f c2       	rjmp	.+1182   	; 0x4a6 <__bad_interrupt>
   8:	4e c2       	rjmp	.+1180   	; 0x4a6 <__bad_interrupt>
   a:	4d c2       	rjmp	.+1178   	; 0x4a6 <__bad_interrupt>
   c:	4c c2       	rjmp	.+1176   	; 0x4a6 <__bad_interrupt>
   e:	4b c2       	rjmp	.+1174   	; 0x4a6 <__bad_interrupt>
  10:	4a c2       	rjmp	.+1172   	; 0x4a6 <__bad_interrupt>
  12:	47 c3       	rjmp	.+1678   	; 0x6a2 <__vector_9>
  14:	48 c2       	rjmp	.+1168   	; 0x4a6 <__bad_interrupt>
  16:	47 c2       	rjmp	.+1166   	; 0x4a6 <__bad_interrupt>
  18:	46 c2       	rjmp	.+1164   	; 0x4a6 <__bad_interrupt>
  1a:	45 c2       	rjmp	.+1162   	; 0x4a6 <__bad_interrupt>
  1c:	44 c2       	rjmp	.+1160   	; 0x4a6 <__bad_interrupt>
  1e:	43 c2       	rjmp	.+1158   	; 0x4a6 <__bad_interrupt>
  20:	42 c2       	rjmp	.+1156   	; 0x4a6 <__bad_interrupt>
  22:	41 c2       	rjmp	.+1154   	; 0x4a6 <__bad_interrupt>
  24:	40 c2       	rjmp	.+1152   	; 0x4a6 <__bad_interrupt>

00000026 <__trampolines_end>:
  26:	00 00       	nop
  28:	00 00       	nop
  2a:	00 00       	nop
  2c:	00 80       	ld	r0, Z
  2e:	e0 f0       	brcs	.+56     	; 0x68 <__SREG__+0x29>
  30:	70 38       	cpi	r23, 0x80	; 128
  32:	18 18       	sub	r1, r8
  34:	18 18       	sub	r1, r8
  36:	38 70       	andi	r19, 0x08	; 8
  38:	f0 e0       	ldi	r31, 0x00	; 0
  3a:	80 00       	.word	0x0080	; ????
	...
  44:	00 00       	nop
  46:	00 f0       	brcs	.+0      	; 0x48 <__SREG__+0x9>
  48:	ff ff       	.word	0xffff	; ????
  4a:	0f 01       	movw	r0, r30
	...
  54:	01 0f       	add	r16, r17
  56:	ff ff       	.word	0xffff	; ????
  58:	f0 00       	.word	0x00f0	; ????
	...
  62:	00 1f       	adc	r16, r16
  64:	ff ff       	.word	0xffff	; ????
  66:	e0 00       	.word	0x00e0	; ????
	...
  70:	00 e0       	ldi	r16, 0x00	; 0
  72:	ff ff       	.word	0xffff	; ????
  74:	1f 00       	.word	0x001f	; ????
	...
  7e:	00 00       	nop
  80:	01 03       	mulsu	r16, r17
  82:	0f 1f       	adc	r16, r31
  84:	1c 38       	cpi	r17, 0x8C	; 140
  86:	20 30       	cpi	r18, 0x00	; 0
  88:	30 20       	and	r3, r0
  8a:	38 1c       	adc	r3, r8
  8c:	1f 0f       	add	r17, r31
  8e:	03 01       	movw	r0, r6
	...
  9c:	00 00       	nop
  9e:	00 80       	ld	r0, Z
  a0:	80 80       	ld	r8, Z
  a2:	c0 c0       	rjmp	.+384    	; 0x224 <__SREG__+0x1e5>
  a4:	f8 f8       	.word	0xf8f8	; ????
  a6:	f8 00       	.word	0x00f8	; ????
	...
  b8:	00 00       	nop
  ba:	00 01       	movw	r0, r0
  bc:	01 01       	movw	r0, r2
  be:	01 01       	movw	r0, r2
  c0:	ff ff       	.word	0xffff	; ????
  c2:	ff 00       	.word	0x00ff	; ????
	...
  dc:	ff ff       	.word	0xffff	; ????
  de:	ff 00       	.word	0x00ff	; ????
	...
  f8:	3f 3f       	cpi	r19, 0xFF	; 255
  fa:	3f 00       	.word	0x003f	; ????
	...
 10c:	80 c0       	rjmp	.+256    	; 0x20e <__SREG__+0x1cf>
 10e:	e0 f0       	brcs	.+56     	; 0x148 <__SREG__+0x109>
 110:	70 38       	cpi	r23, 0x80	; 128
 112:	18 18       	sub	r1, r8
 114:	18 18       	sub	r1, r8
 116:	18 38       	cpi	r17, 0x88	; 136
 118:	70 f0       	brcs	.+28     	; 0x136 <__SREG__+0xf7>
 11a:	e0 c0       	rjmp	.+448    	; 0x2dc <__SREG__+0x29d>
 11c:	80 00       	.word	0x0080	; ????
	...
 126:	00 00       	nop
 128:	0f 0f       	add	r16, r31
 12a:	0f 00       	.word	0x000f	; ????
 12c:	00 00       	nop
 12e:	00 00       	nop
 130:	00 00       	nop
 132:	00 80       	ld	r0, Z
 134:	c0 e0       	ldi	r28, 0x00	; 0
 136:	ff 7f       	andi	r31, 0xFF	; 255
 138:	1f 00       	.word	0x001f	; ????
	...
 142:	00 00       	nop
 144:	00 c0       	rjmp	.+0      	; 0x146 <__SREG__+0x107>
 146:	e0 f0       	brcs	.+56     	; 0x180 <__SREG__+0x141>
 148:	70 38       	cpi	r23, 0x80	; 128
 14a:	1c 0c       	add	r1, r12
 14c:	06 06       	cpc	r0, r22
 14e:	03 03       	mulsu	r16, r19
 150:	01 00       	.word	0x0001	; ????
	...
 15e:	00 3c       	cpi	r16, 0xC0	; 192
 160:	3f 3f       	cpi	r19, 0xFF	; 255
 162:	23 30       	cpi	r18, 0x03	; 3
 164:	30 30       	cpi	r19, 0x00	; 0
 166:	30 30       	cpi	r19, 0x00	; 0
 168:	30 30       	cpi	r19, 0x00	; 0
 16a:	30 30       	cpi	r19, 0x00	; 0
 16c:	30 30       	cpi	r19, 0x00	; 0
 16e:	30 30       	cpi	r19, 0x00	; 0
 170:	30 00       	.word	0x0030	; ????
	...
 17a:	00 00       	nop
 17c:	80 c0       	rjmp	.+256    	; 0x27e <__SREG__+0x23f>
 17e:	e0 f0       	brcs	.+56     	; 0x1b8 <__SREG__+0x179>
 180:	18 38       	cpi	r17, 0x88	; 136
 182:	08 08       	sbc	r0, r8
 184:	08 08       	sbc	r0, r8
 186:	38 18       	sub	r3, r8
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	c0 80       	ld	r12, Z
	...
 198:	07 07       	cpc	r16, r23
 19a:	07 00       	.word	0x0007	; ????
 19c:	00 00       	nop
 19e:	80 80       	ld	r8, Z
 1a0:	80 80       	ld	r8, Z
 1a2:	c0 c0       	rjmp	.+384    	; 0x324 <__SREG__+0x2e5>
 1a4:	f0 7f       	andi	r31, 0xF0	; 240
 1a6:	3f 1f       	adc	r19, r31
	...
 1b0:	00 00       	nop
 1b2:	00 e0       	ldi	r16, 0x00	; 0
 1b4:	e0 e0       	ldi	r30, 0x00	; 0
 1b6:	00 00       	nop
 1b8:	00 00       	nop
 1ba:	01 01       	movw	r0, r2
 1bc:	01 01       	movw	r0, r2
 1be:	01 03       	mulsu	r16, r17
 1c0:	07 0f       	add	r16, r23
 1c2:	fe fc       	.word	0xfcfe	; ????
 1c4:	f8 00       	.word	0x00f8	; ????
	...
 1ce:	00 01       	movw	r0, r0
 1d0:	07 0f       	add	r16, r23
 1d2:	1e 1c       	adc	r1, r14
 1d4:	30 38       	cpi	r19, 0x80	; 128
 1d6:	20 20       	and	r2, r0
 1d8:	20 20       	and	r2, r0
 1da:	38 30       	cpi	r19, 0x08	; 8
 1dc:	1c 1e       	adc	r1, r28
 1de:	0f 07       	cpc	r16, r31
 1e0:	01 00       	.word	0x0001	; ????
	...
 1f2:	00 00       	nop
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	f0 f8       	bld	r15, 0
 1f8:	f8 f8       	.word	0xf8f8	; ????
	...
 20a:	00 80       	ld	r0, Z
 20c:	e0 f0       	brcs	.+56     	; 0x246 <__SREG__+0x207>
 20e:	7c 3e       	cpi	r23, 0xEC	; 236
 210:	0f 07       	cpc	r16, r31
 212:	03 ff       	sbrs	r16, 3
 214:	ff ff       	.word	0xffff	; ????
	...
 222:	00 e0       	ldi	r16, 0x00	; 0
 224:	f0 fc       	sbrc	r15, 0
 226:	9f cf       	rjmp	.-194    	; 0x166 <__SREG__+0x127>
 228:	c3 c1       	rjmp	.+902    	; 0x5b0 <draw_large_font+0x52>
 22a:	c0 c0       	rjmp	.+384    	; 0x3ac <__SREG__+0x36d>
 22c:	c0 c0       	rjmp	.+384    	; 0x3ae <__SREG__+0x36f>
 22e:	80 ff       	sbrs	r24, 0
 230:	ff ff       	.word	0xffff	; ????
 232:	80 c0       	rjmp	.+256    	; 0x334 <__SREG__+0x2f5>
 234:	c0 c0       	rjmp	.+384    	; 0x3b6 <__SREG__+0x377>
	...
 24a:	00 3f       	cpi	r16, 0xF0	; 240
 24c:	3f 3f       	cpi	r19, 0xFF	; 255
	...
 25a:	00 00       	nop
 25c:	00 c0       	rjmp	.+0      	; 0x25e <__SREG__+0x21f>
 25e:	f8 f8       	.word	0xf8f8	; ????
 260:	18 18       	sub	r1, r8
 262:	18 18       	sub	r1, r8
 264:	18 18       	sub	r1, r8
 266:	18 18       	sub	r1, r8
 268:	18 18       	sub	r1, r8
 26a:	18 18       	sub	r1, r8
	...
 278:	f0 ff       	sbrs	r31, 0
 27a:	ff e7       	ldi	r31, 0x7F	; 127
 27c:	70 70       	andi	r23, 0x00	; 0
 27e:	30 30       	cpi	r19, 0x00	; 0
 280:	30 30       	cpi	r19, 0x00	; 0
 282:	70 70       	andi	r23, 0x00	; 0
 284:	e0 c0       	rjmp	.+448    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 286:	c0 00       	.word	0x00c0	; ????
	...
 294:	01 01       	movw	r0, r2
 296:	01 00       	.word	0x0001	; ????
	...
 2a0:	00 03       	mulsu	r16, r16
 2a2:	ff ff       	.word	0xffff	; ????
 2a4:	fc 00       	.word	0x00fc	; ????
	...
 2ae:	00 07       	cpc	r16, r16
 2b0:	0f 1f       	adc	r16, r31
 2b2:	1c 30       	cpi	r17, 0x0C	; 12
 2b4:	38 20       	and	r3, r8
 2b6:	20 20       	and	r2, r0
 2b8:	20 20       	and	r2, r0
 2ba:	38 18       	sub	r3, r8
 2bc:	1c 1f       	adc	r17, r28
 2be:	0f 03       	fmul	r16, r23
	...
 2cc:	00 80       	ld	r0, Z
 2ce:	e0 f0       	brcs	.+56     	; 0x308 <__SREG__+0x2c9>
 2d0:	70 38       	cpi	r23, 0x80	; 128
 2d2:	38 18       	sub	r3, r8
 2d4:	18 18       	sub	r1, r8
 2d6:	38 38       	cpi	r19, 0x88	; 136
 2d8:	f0 f0       	brcs	.+60     	; 0x316 <__SREG__+0x2d7>
 2da:	e0 80       	ld	r14, Z
	...
 2e4:	00 00       	nop
 2e6:	00 f0       	brcs	.+0      	; 0x2e8 <__SREG__+0x2a9>
 2e8:	fe ff       	.word	0xfffe	; ????
 2ea:	8f c1       	rjmp	.+798    	; 0x60a <clear+0x8>
 2ec:	c0 e0       	ldi	r28, 0x00	; 0
 2ee:	60 60       	ori	r22, 0x00	; 0
 2f0:	60 60       	ori	r22, 0x00	; 0
 2f2:	60 e0       	ldi	r22, 0x00	; 0
 2f4:	c0 c3       	rjmp	.+1920   	; 0xa76 <_etext+0x1ba>
 2f6:	83 03       	fmuls	r16, r19
	...
 300:	00 00       	nop
 302:	00 ff       	sbrs	r16, 0
 304:	ff ff       	.word	0xffff	; ????
 306:	07 01       	movw	r0, r14
	...
 310:	01 03       	mulsu	r16, r17
 312:	ff ff       	.word	0xffff	; ????
 314:	fc 00       	.word	0x00fc	; ????
	...
 31e:	00 00       	nop
 320:	03 0f       	add	r16, r19
 322:	1f 1c       	adc	r1, r15
 324:	30 38       	cpi	r19, 0x80	; 128
 326:	20 20       	and	r2, r0
 328:	20 20       	and	r2, r0
 32a:	30 30       	cpi	r19, 0x00	; 0
 32c:	18 1e       	adc	r1, r24
 32e:	0f 07       	cpc	r16, r31
 330:	01 00       	.word	0x0001	; ????
	...
 33a:	00 00       	nop
 33c:	18 18       	sub	r1, r8
 33e:	18 18       	sub	r1, r8
 340:	18 18       	sub	r1, r8
 342:	18 18       	sub	r1, r8
 344:	18 18       	sub	r1, r8
 346:	18 98       	cbi	0x03, 0	; 3
 348:	c8 f8       	.word	0xf8c8	; ????
 34a:	f8 78       	andi	r31, 0x88	; 136
 34c:	18 00       	.word	0x0018	; ????
	...
 35e:	00 c0       	rjmp	.+0      	; 0x360 <__SREG__+0x321>
 360:	f0 fc       	sbrc	r15, 0
 362:	7f 1f       	adc	r23, r31
 364:	07 01       	movw	r0, r14
	...
 376:	00 00       	nop
 378:	c0 f8       	bld	r12, 0
 37a:	ff 7f       	andi	r31, 0xFF	; 255
 37c:	07 01       	movw	r0, r14
	...
 392:	00 3e       	cpi	r16, 0xE0	; 224
 394:	3f 3f       	cpi	r19, 0xFF	; 255
 396:	07 00       	.word	0x0007	; ????
	...
 3ac:	80 c0       	rjmp	.+256    	; 0x4ae <out_num+0x6>
 3ae:	e0 f0       	brcs	.+56     	; 0x3e8 <__SREG__+0x3a9>
 3b0:	70 38       	cpi	r23, 0x80	; 128
 3b2:	18 18       	sub	r1, r8
 3b4:	18 18       	sub	r1, r8
 3b6:	18 38       	cpi	r17, 0x88	; 136
 3b8:	70 f0       	brcs	.+28     	; 0x3d6 <__SREG__+0x397>
 3ba:	e0 c0       	rjmp	.+448    	; 0x57c <draw_large_font+0x1e>
 3bc:	80 00       	.word	0x0080	; ????
	...
 3c6:	00 00       	nop
 3c8:	1f 3f       	cpi	r17, 0xFF	; 255
 3ca:	7f f0       	brie	.+30     	; 0x3ea <__SREG__+0x3ab>
 3cc:	e0 c0       	rjmp	.+448    	; 0x58e <draw_large_font+0x30>
 3ce:	80 80       	ld	r8, Z
 3d0:	80 80       	ld	r8, Z
 3d2:	80 c0       	rjmp	.+256    	; 0x4d4 <out_num+0x2c>
 3d4:	e0 f0       	brcs	.+56     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3d6:	7f 3f       	cpi	r23, 0xFF	; 255
 3d8:	0f 00       	.word	0x000f	; ????
	...
 3e2:	00 f0       	brcs	.+0      	; 0x3e4 <__SREG__+0x3a5>
 3e4:	fc fe       	.word	0xfefc	; ????
 3e6:	0f 07       	cpc	r16, r31
 3e8:	03 03       	mulsu	r16, r19
 3ea:	01 01       	movw	r0, r2
 3ec:	01 01       	movw	r0, r2
 3ee:	03 03       	mulsu	r16, r19
 3f0:	07 0f       	add	r16, r23
 3f2:	ff fe       	.word	0xfeff	; ????
 3f4:	fc 00       	.word	0x00fc	; ????
	...
 3fe:	00 01       	movw	r0, r0
 400:	07 0f       	add	r16, r23
 402:	1e 1c       	adc	r1, r14
 404:	30 38       	cpi	r19, 0x80	; 128
 406:	20 20       	and	r2, r0
 408:	20 20       	and	r2, r0
 40a:	38 30       	cpi	r19, 0x08	; 8
 40c:	18 1c       	adc	r1, r8
 40e:	0f 07       	cpc	r16, r31
 410:	01 00       	.word	0x0001	; ????
	...
 41a:	00 00       	nop
 41c:	c0 e0       	ldi	r28, 0x00	; 0
 41e:	f0 70       	andi	r31, 0x00	; 0
 420:	38 38       	cpi	r19, 0x88	; 136
 422:	18 18       	sub	r1, r8
 424:	18 18       	sub	r1, r8
 426:	38 38       	cpi	r19, 0x88	; 136
 428:	70 f0       	brcs	.+28     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 42a:	e0 80       	ld	r14, Z
	...
 434:	00 00       	nop
 436:	00 7f       	andi	r16, 0xF0	; 240
 438:	ff ff       	.word	0xffff	; ????
 43a:	81 00       	.word	0x0081	; ????
	...
 444:	00 c1       	rjmp	.+512    	; 0x646 <oled_init+0x16>
 446:	dd ff       	.word	0xffdd	; ????
 448:	fe 00       	.word	0x00fe	; ????
	...
 452:	00 00       	nop
 454:	01 03       	mulsu	r16, r17
 456:	07 07       	cpc	r16, r23
 458:	0e 0c       	add	r0, r14
 45a:	0c 0c       	add	r0, r12
 45c:	0c 0c       	add	r0, r12
 45e:	0e 06       	cpc	r0, r30
 460:	07 e3       	ldi	r16, 0x37	; 55
 462:	fb ff       	.word	0xfffb	; ????
 464:	1f 00       	.word	0x001f	; ????
	...
 46e:	00 00       	nop
 470:	07 0f       	add	r16, r23
 472:	1f 1c       	adc	r1, r15
 474:	38 20       	and	r3, r8
 476:	20 20       	and	r2, r0
 478:	20 20       	and	r2, r0
 47a:	38 1c       	adc	r3, r8
 47c:	1e 0f       	add	r17, r30
 47e:	07 01       	movw	r0, r14
 480:	00 00       	nop
 482:	00 00       	nop
	...

00000486 <__ctors_end>:
 486:	11 24       	eor	r1, r1
 488:	1f be       	out	0x3f, r1	; 63
 48a:	cf e5       	ldi	r28, 0x5F	; 95
 48c:	d4 e0       	ldi	r29, 0x04	; 4
 48e:	de bf       	out	0x3e, r29	; 62
 490:	cd bf       	out	0x3d, r28	; 61

00000492 <__do_clear_bss>:
 492:	20 e0       	ldi	r18, 0x00	; 0
 494:	a0 e6       	ldi	r26, 0x60	; 96
 496:	b0 e0       	ldi	r27, 0x00	; 0
 498:	01 c0       	rjmp	.+2      	; 0x49c <.do_clear_bss_start>

0000049a <.do_clear_bss_loop>:
 49a:	1d 92       	st	X+, r1

0000049c <.do_clear_bss_start>:
 49c:	a0 37       	cpi	r26, 0x70	; 112
 49e:	b2 07       	cpc	r27, r18
 4a0:	e1 f7       	brne	.-8      	; 0x49a <.do_clear_bss_loop>
 4a2:	90 d1       	rcall	.+800    	; 0x7c4 <main>
 4a4:	09 c2       	rjmp	.+1042   	; 0x8b8 <_exit>

000004a6 <__bad_interrupt>:
 4a6:	ac cd       	rjmp	.-1192   	; 0x0 <__vectors>

000004a8 <out_num>:
		for(j=0; j < 10; j++)
		{
			data_write(pgm_read_byte(&font[ch][k++]));
		}
	}
}
 4a8:	9c 01       	movw	r18, r24
 4aa:	ea e0       	ldi	r30, 0x0A	; 10
 4ac:	f0 e0       	ldi	r31, 0x00	; 0
 4ae:	bf 01       	movw	r22, r30
 4b0:	f0 d1       	rcall	.+992    	; 0x892 <__divmodhi4>
 4b2:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <one+0x1>
 4b6:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <one>
 4ba:	cb 01       	movw	r24, r22
 4bc:	bf 01       	movw	r22, r30
 4be:	e9 d1       	rcall	.+978    	; 0x892 <__divmodhi4>
 4c0:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <two+0x1>
 4c4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <two>
 4c8:	c9 01       	movw	r24, r18
 4ca:	64 e6       	ldi	r22, 0x64	; 100
 4cc:	70 e0       	ldi	r23, 0x00	; 0
 4ce:	e1 d1       	rcall	.+962    	; 0x892 <__divmodhi4>
 4d0:	cb 01       	movw	r24, r22
 4d2:	bf 01       	movw	r22, r30
 4d4:	de d1       	rcall	.+956    	; 0x892 <__divmodhi4>
 4d6:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <three+0x1>
 4da:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <three>
 4de:	c9 01       	movw	r24, r18
 4e0:	68 ee       	ldi	r22, 0xE8	; 232
 4e2:	73 e0       	ldi	r23, 0x03	; 3
 4e4:	d6 d1       	rcall	.+940    	; 0x892 <__divmodhi4>
 4e6:	70 93 6f 00 	sts	0x006F, r23	; 0x80006f <four+0x1>
 4ea:	60 93 6e 00 	sts	0x006E, r22	; 0x80006e <four>
 4ee:	08 95       	ret

000004f0 <write>:
 4f0:	94 ea       	ldi	r25, 0xA4	; 164
 4f2:	96 bf       	out	0x36, r25	; 54
 4f4:	06 b6       	in	r0, 0x36	; 54
 4f6:	07 fe       	sbrs	r0, 7
 4f8:	fd cf       	rjmp	.-6      	; 0x4f4 <write+0x4>
 4fa:	98 e7       	ldi	r25, 0x78	; 120
 4fc:	93 b9       	out	0x03, r25	; 3
 4fe:	94 e8       	ldi	r25, 0x84	; 132
 500:	96 bf       	out	0x36, r25	; 54
 502:	06 b6       	in	r0, 0x36	; 54
 504:	07 fe       	sbrs	r0, 7
 506:	fd cf       	rjmp	.-6      	; 0x502 <write+0x12>
 508:	13 b8       	out	0x03, r1	; 3
 50a:	94 e8       	ldi	r25, 0x84	; 132
 50c:	96 bf       	out	0x36, r25	; 54
 50e:	06 b6       	in	r0, 0x36	; 54
 510:	07 fe       	sbrs	r0, 7
 512:	fd cf       	rjmp	.-6      	; 0x50e <write+0x1e>
 514:	83 b9       	out	0x03, r24	; 3
 516:	84 e8       	ldi	r24, 0x84	; 132
 518:	86 bf       	out	0x36, r24	; 54
 51a:	06 b6       	in	r0, 0x36	; 54
 51c:	07 fe       	sbrs	r0, 7
 51e:	fd cf       	rjmp	.-6      	; 0x51a <write+0x2a>
 520:	84 e9       	ldi	r24, 0x94	; 148
 522:	86 bf       	out	0x36, r24	; 54
 524:	08 95       	ret

00000526 <data_write>:
 526:	94 ea       	ldi	r25, 0xA4	; 164
 528:	96 bf       	out	0x36, r25	; 54
 52a:	06 b6       	in	r0, 0x36	; 54
 52c:	07 fe       	sbrs	r0, 7
 52e:	fd cf       	rjmp	.-6      	; 0x52a <data_write+0x4>
 530:	98 e7       	ldi	r25, 0x78	; 120
 532:	93 b9       	out	0x03, r25	; 3
 534:	94 e8       	ldi	r25, 0x84	; 132
 536:	96 bf       	out	0x36, r25	; 54
 538:	06 b6       	in	r0, 0x36	; 54
 53a:	07 fe       	sbrs	r0, 7
 53c:	fd cf       	rjmp	.-6      	; 0x538 <data_write+0x12>
 53e:	90 e4       	ldi	r25, 0x40	; 64
 540:	93 b9       	out	0x03, r25	; 3
 542:	94 e8       	ldi	r25, 0x84	; 132
 544:	96 bf       	out	0x36, r25	; 54
 546:	06 b6       	in	r0, 0x36	; 54
 548:	07 fe       	sbrs	r0, 7
 54a:	fd cf       	rjmp	.-6      	; 0x546 <data_write+0x20>
 54c:	83 b9       	out	0x03, r24	; 3
 54e:	84 e8       	ldi	r24, 0x84	; 132
 550:	86 bf       	out	0x36, r24	; 54
 552:	06 b6       	in	r0, 0x36	; 54
 554:	07 fe       	sbrs	r0, 7
 556:	fd cf       	rjmp	.-6      	; 0x552 <data_write+0x2c>
 558:	84 e9       	ldi	r24, 0x94	; 148
 55a:	86 bf       	out	0x36, r24	; 54
 55c:	08 95       	ret

0000055e <draw_large_font>:

void draw_large_font(int x, int y, int ch)
{
 55e:	cf 92       	push	r12
 560:	df 92       	push	r13
 562:	ef 92       	push	r14
 564:	ff 92       	push	r15
 566:	0f 93       	push	r16
 568:	1f 93       	push	r17
 56a:	cf 93       	push	r28
 56c:	df 93       	push	r29
	unsigned int i, j, k =0;
	unsigned int high, low;

	high = x / 16;
 56e:	9c 01       	movw	r18, r24
 570:	99 23       	and	r25, r25
 572:	14 f4       	brge	.+4      	; 0x578 <draw_large_font+0x1a>
 574:	21 5f       	subi	r18, 0xF1	; 241
 576:	3f 4f       	sbci	r19, 0xFF	; 255
 578:	35 95       	asr	r19
 57a:	27 95       	ror	r18
 57c:	35 95       	asr	r19
 57e:	27 95       	ror	r18
 580:	35 95       	asr	r19
 582:	27 95       	ror	r18
 584:	35 95       	asr	r19
 586:	27 95       	ror	r18
	low = x % 16;
 588:	8f 70       	andi	r24, 0x0F	; 15
 58a:	90 78       	andi	r25, 0x80	; 128
 58c:	99 23       	and	r25, r25
 58e:	24 f4       	brge	.+8      	; 0x598 <draw_large_font+0x3a>
 590:	01 97       	sbiw	r24, 0x01	; 1
 592:	80 6f       	ori	r24, 0xF0	; 240
 594:	9f 6f       	ori	r25, 0xFF	; 255
 596:	01 96       	adiw	r24, 0x01	; 1
 598:	e8 2e       	mov	r14, r24
 59a:	0f 2e       	mov	r0, r31
 59c:	f0 eb       	ldi	r31, 0xB0	; 176
 59e:	ff 2e       	mov	r15, r31
 5a0:	f0 2d       	mov	r31, r0
 5a2:	f6 0e       	add	r15, r22
 5a4:	80 e7       	ldi	r24, 0x70	; 112
 5a6:	84 9f       	mul	r24, r20
 5a8:	e0 01       	movw	r28, r0
 5aa:	85 9f       	mul	r24, r21
 5ac:	d0 0d       	add	r29, r0
 5ae:	11 24       	eor	r1, r1
 5b0:	ca 5d       	subi	r28, 0xDA	; 218
 5b2:	df 4f       	sbci	r29, 0xFF	; 255
 5b4:	0f 2e       	mov	r0, r31
 5b6:	f4 eb       	ldi	r31, 0xB4	; 180
 5b8:	cf 2e       	mov	r12, r31
 5ba:	f0 2d       	mov	r31, r0
 5bc:	c6 0e       	add	r12, r22

	for(i=0; i<4; i++)
	{
		write(0xb0+i+y);
		write(0x00+low);
		write(0x18+high);
 5be:	0f 2e       	mov	r0, r31
 5c0:	f8 e1       	ldi	r31, 0x18	; 24
 5c2:	df 2e       	mov	r13, r31
 5c4:	f0 2d       	mov	r31, r0
 5c6:	d2 0e       	add	r13, r18
	high = x / 16;
	low = x % 16;

	for(i=0; i<4; i++)
	{
		write(0xb0+i+y);
 5c8:	8f 2d       	mov	r24, r15
 5ca:	92 df       	rcall	.-220    	; 0x4f0 <write>
		write(0x00+low);
 5cc:	8e 2d       	mov	r24, r14
 5ce:	90 df       	rcall	.-224    	; 0x4f0 <write>
		write(0x18+high);
 5d0:	8d 2d       	mov	r24, r13
 5d2:	8e df       	rcall	.-228    	; 0x4f0 <write>
 5d4:	8e 01       	movw	r16, r28
 5d6:	04 5e       	subi	r16, 0xE4	; 228
 5d8:	1f 4f       	sbci	r17, 0xFF	; 255

		for(j=0; j < 28; j++)
		{
			data_write(pgm_read_byte(&large_font[ch][k++]));
 5da:	fe 01       	movw	r30, r28
 5dc:	84 91       	lpm	r24, Z
 5de:	a3 df       	rcall	.-186    	; 0x526 <data_write>
 5e0:	21 96       	adiw	r28, 0x01	; 1
	{
		write(0xb0+i+y);
		write(0x00+low);
		write(0x18+high);

		for(j=0; j < 28; j++)
 5e2:	c0 17       	cp	r28, r16
 5e4:	d1 07       	cpc	r29, r17
 5e6:	c9 f7       	brne	.-14     	; 0x5da <draw_large_font+0x7c>
 5e8:	f3 94       	inc	r15
 5ea:	e8 01       	movw	r28, r16
	unsigned int high, low;

	high = x / 16;
	low = x % 16;

	for(i=0; i<4; i++)
 5ec:	fc 10       	cpse	r15, r12
 5ee:	ec cf       	rjmp	.-40     	; 0x5c8 <draw_large_font+0x6a>
		for(j=0; j < 28; j++)
		{
			data_write(pgm_read_byte(&large_font[ch][k++]));
		}
	}
}
 5f0:	df 91       	pop	r29
 5f2:	cf 91       	pop	r28
 5f4:	1f 91       	pop	r17
 5f6:	0f 91       	pop	r16
 5f8:	ff 90       	pop	r15
 5fa:	ef 90       	pop	r14
 5fc:	df 90       	pop	r13
 5fe:	cf 90       	pop	r12
 600:	08 95       	ret

00000602 <clear>:

void clear(void)
{
 602:	1f 93       	push	r17
 604:	cf 93       	push	r28
 606:	df 93       	push	r29
 608:	10 eb       	ldi	r17, 0xB0	; 176
	unsigned int i, j;

	for(i=0; i<4; i++)
	{
		write(0xb0+i);
 60a:	81 2f       	mov	r24, r17
 60c:	71 df       	rcall	.-286    	; 0x4f0 <write>
		write(0x00);
 60e:	80 e0       	ldi	r24, 0x00	; 0
 610:	6f df       	rcall	.-290    	; 0x4f0 <write>
		write(0x10);
 612:	80 e1       	ldi	r24, 0x10	; 16
 614:	6d df       	rcall	.-294    	; 0x4f0 <write>
 616:	c0 e8       	ldi	r28, 0x80	; 128
 618:	d0 e0       	ldi	r29, 0x00	; 0
		for(j=0; j < 128; j++)
		{
			data_write(0x00);
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	84 df       	rcall	.-248    	; 0x526 <data_write>
 61e:	21 97       	sbiw	r28, 0x01	; 1
	for(i=0; i<4; i++)
	{
		write(0xb0+i);
		write(0x00);
		write(0x10);
		for(j=0; j < 128; j++)
 620:	e1 f7       	brne	.-8      	; 0x61a <clear+0x18>
 622:	1f 5f       	subi	r17, 0xFF	; 255

void clear(void)
{
	unsigned int i, j;

	for(i=0; i<4; i++)
 624:	14 3b       	cpi	r17, 0xB4	; 180
 626:	89 f7       	brne	.-30     	; 0x60a <clear+0x8>
		for(j=0; j < 128; j++)
		{
			data_write(0x00);
		}
	}
}
 628:	df 91       	pop	r29
 62a:	cf 91       	pop	r28
 62c:	1f 91       	pop	r17
 62e:	08 95       	ret

00000630 <oled_init>:

void oled_init(void)
{
	write(0xAE);   //display off
 630:	8e ea       	ldi	r24, 0xAE	; 174
 632:	5e df       	rcall	.-324    	; 0x4f0 <write>
	write(0x20); //Set Memory Addressing Mode
 634:	80 e2       	ldi	r24, 0x20	; 32
 636:	5c df       	rcall	.-328    	; 0x4f0 <write>
	write(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mode (RESET);11,Invalid
 638:	80 e1       	ldi	r24, 0x10	; 16
 63a:	5a df       	rcall	.-332    	; 0x4f0 <write>
	write(0xb0); //Set Page Start Address for Page Addressing Mode,0-7
 63c:	80 eb       	ldi	r24, 0xB0	; 176
 63e:	58 df       	rcall	.-336    	; 0x4f0 <write>
	write(0xc8); //Set COM Output Scan Direction
 640:	88 ec       	ldi	r24, 0xC8	; 200
 642:	56 df       	rcall	.-340    	; 0x4f0 <write>
	write(0x00);//---set low column address
 644:	80 e0       	ldi	r24, 0x00	; 0
 646:	54 df       	rcall	.-344    	; 0x4f0 <write>
	write(0x10);//---set high column address
 648:	80 e1       	ldi	r24, 0x10	; 16
 64a:	52 df       	rcall	.-348    	; 0x4f0 <write>
	write(0x40);//--set start line address
 64c:	80 e4       	ldi	r24, 0x40	; 64
 64e:	50 df       	rcall	.-352    	; 0x4f0 <write>

	write(0x81);//--set contrast control register*
 650:	81 e8       	ldi	r24, 0x81	; 129
 652:	4e df       	rcall	.-356    	; 0x4f0 <write>
	write(0xFF);
 654:	8f ef       	ldi	r24, 0xFF	; 255
 656:	4c df       	rcall	.-360    	; 0x4f0 <write>

	write(0xa1);//--set segment re-map 0 to 127
 658:	81 ea       	ldi	r24, 0xA1	; 161
 65a:	4a df       	rcall	.-364    	; 0x4f0 <write>
	write(0xa6);//--set normal display
 65c:	86 ea       	ldi	r24, 0xA6	; 166
 65e:	48 df       	rcall	.-368    	; 0x4f0 <write>
	write(0xa8);//--set multiplex ratio(1 to 64)
 660:	88 ea       	ldi	r24, 0xA8	; 168
 662:	46 df       	rcall	.-372    	; 0x4f0 <write>
	write(0x1F);//
 664:	8f e1       	ldi	r24, 0x1F	; 31
 666:	44 df       	rcall	.-376    	; 0x4f0 <write>
	write(0xa4);//0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 668:	84 ea       	ldi	r24, 0xA4	; 164
 66a:	42 df       	rcall	.-380    	; 0x4f0 <write>
	write(0xd3);//-set display offset
 66c:	83 ed       	ldi	r24, 0xD3	; 211
 66e:	40 df       	rcall	.-384    	; 0x4f0 <write>
	write(0x00);//-not offset
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	3e df       	rcall	.-388    	; 0x4f0 <write>
	write(0xd5);//--set display clock divide ratio/oscillator frequency
 674:	85 ed       	ldi	r24, 0xD5	; 213
 676:	3c df       	rcall	.-392    	; 0x4f0 <write>
	write(0xf0);//--set divide ratio
 678:	80 ef       	ldi	r24, 0xF0	; 240
 67a:	3a df       	rcall	.-396    	; 0x4f0 <write>
	write(0xd9);//--set pre-charge period
 67c:	89 ed       	ldi	r24, 0xD9	; 217
 67e:	38 df       	rcall	.-400    	; 0x4f0 <write>

	write(0x22); //
 680:	82 e2       	ldi	r24, 0x22	; 34
 682:	36 df       	rcall	.-404    	; 0x4f0 <write>
	write(0xda);//--set com pins hardware configuration
 684:	8a ed       	ldi	r24, 0xDA	; 218
 686:	34 df       	rcall	.-408    	; 0x4f0 <write>
	write(0x02);
 688:	82 e0       	ldi	r24, 0x02	; 2
 68a:	32 df       	rcall	.-412    	; 0x4f0 <write>
	write(0xdb);//--set vcomh
 68c:	8b ed       	ldi	r24, 0xDB	; 219
 68e:	30 df       	rcall	.-416    	; 0x4f0 <write>

	write(0x20);//0x20,0.77xVcc
 690:	80 e2       	ldi	r24, 0x20	; 32
 692:	2e df       	rcall	.-420    	; 0x4f0 <write>
	write(0x8d);//--set DC-DC enable
 694:	8d e8       	ldi	r24, 0x8D	; 141
 696:	2c df       	rcall	.-424    	; 0x4f0 <write>
	write(0x14);//
 698:	84 e1       	ldi	r24, 0x14	; 20
 69a:	2a df       	rcall	.-428    	; 0x4f0 <write>
	write(0xaf);//--turn on oled panel
 69c:	8f ea       	ldi	r24, 0xAF	; 175
 69e:	28 df       	rcall	.-432    	; 0x4f0 <write>
 6a0:	08 95       	ret

000006a2 <__vector_9>:
}

ISR(TIMER0_OVF_vect)
{
 6a2:	1f 92       	push	r1
 6a4:	0f 92       	push	r0
 6a6:	0f b6       	in	r0, 0x3f	; 63
 6a8:	0f 92       	push	r0
 6aa:	11 24       	eor	r1, r1
 6ac:	8f 93       	push	r24
 6ae:	9f 93       	push	r25
	TCNT0=140;
 6b0:	8c e8       	ldi	r24, 0x8C	; 140
 6b2:	82 bf       	out	0x32, r24	; 50
	count++;
 6b4:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <count>
 6b8:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <count+0x1>
 6bc:	01 96       	adiw	r24, 0x01	; 1
 6be:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <count+0x1>
 6c2:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <count>
}
 6c6:	9f 91       	pop	r25
 6c8:	8f 91       	pop	r24
 6ca:	0f 90       	pop	r0
 6cc:	0f be       	out	0x3f, r0	; 63
 6ce:	0f 90       	pop	r0
 6d0:	1f 90       	pop	r1
 6d2:	18 95       	reti

000006d4 <__vector_1>:


ISR(INT0_vect)
{
 6d4:	1f 92       	push	r1
 6d6:	0f 92       	push	r0
 6d8:	0f b6       	in	r0, 0x3f	; 63
 6da:	0f 92       	push	r0
 6dc:	11 24       	eor	r1, r1
 6de:	2f 93       	push	r18
 6e0:	3f 93       	push	r19
 6e2:	4f 93       	push	r20
 6e4:	5f 93       	push	r21
 6e6:	6f 93       	push	r22
 6e8:	7f 93       	push	r23
 6ea:	8f 93       	push	r24
 6ec:	9f 93       	push	r25
 6ee:	af 93       	push	r26
 6f0:	bf 93       	push	r27
 6f2:	ef 93       	push	r30
 6f4:	ff 93       	push	r31
	if(m == 0)
 6f6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <m>
 6fa:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <m+0x1>
 6fe:	89 2b       	or	r24, r25
 700:	91 f4       	brne	.+36     	; 0x726 <__vector_1+0x52>
	{
		count = 0;
 702:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <count+0x1>
 706:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <count>
		TIMSK=0x01;
 70a:	81 e0       	ldi	r24, 0x01	; 1
 70c:	89 bf       	out	0x39, r24	; 57
		TCCR0=0x02;
 70e:	82 e0       	ldi	r24, 0x02	; 2
 710:	83 bf       	out	0x33, r24	; 51
		TCNT0=140;
 712:	9c e8       	ldi	r25, 0x8C	; 140
 714:	92 bf       	out	0x32, r25	; 50
		MCUCR=0x02;
 716:	85 bf       	out	0x35, r24	; 53
		m = 1;
 718:	81 e0       	ldi	r24, 0x01	; 1
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <m+0x1>
 720:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <m>
 724:	3e c0       	rjmp	.+124    	; 0x7a2 <__vector_1+0xce>
	}

	else
	{
		TIMSK=0x00;
 726:	19 be       	out	0x39, r1	; 57
		m = 0;
 728:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <m+0x1>
 72c:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <m>

		if(count < 450)
 730:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <count>
 734:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <count+0x1>
 738:	82 3c       	cpi	r24, 0xC2	; 194
 73a:	91 40       	sbci	r25, 0x01	; 1
 73c:	b8 f4       	brcc	.+46     	; 0x76c <__vector_1+0x98>
		{
			sum = sum + count;
 73e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <_edata>
 742:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <_edata+0x1>
 746:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <count>
 74a:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <count+0x1>
 74e:	82 0f       	add	r24, r18
 750:	93 1f       	adc	r25, r19
 752:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <_edata+0x1>
 756:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
			cnt++;
 75a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <cnt>
 75e:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <cnt+0x1>
 762:	01 96       	adiw	r24, 0x01	; 1
 764:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <cnt+0x1>
 768:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <cnt>
		}

		if(cnt == 10)
 76c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <cnt>
 770:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <cnt+0x1>
 774:	0a 97       	sbiw	r24, 0x0a	; 10
 776:	99 f4       	brne	.+38     	; 0x79e <__vector_1+0xca>
		{
			out_num(sum/cnt);
 778:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 77c:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <_edata+0x1>
 780:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <cnt>
 784:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <cnt+0x1>
 788:	70 d0       	rcall	.+224    	; 0x86a <__udivmodhi4>
 78a:	cb 01       	movw	r24, r22
 78c:	8d de       	rcall	.-742    	; 0x4a8 <out_num>
			cnt=0;
 78e:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <cnt+0x1>
 792:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <cnt>
			sum=0;
 796:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <_edata+0x1>
 79a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
		}
		MCUCR=0x03;
 79e:	83 e0       	ldi	r24, 0x03	; 3
 7a0:	85 bf       	out	0x35, r24	; 53
	}
}
 7a2:	ff 91       	pop	r31
 7a4:	ef 91       	pop	r30
 7a6:	bf 91       	pop	r27
 7a8:	af 91       	pop	r26
 7aa:	9f 91       	pop	r25
 7ac:	8f 91       	pop	r24
 7ae:	7f 91       	pop	r23
 7b0:	6f 91       	pop	r22
 7b2:	5f 91       	pop	r21
 7b4:	4f 91       	pop	r20
 7b6:	3f 91       	pop	r19
 7b8:	2f 91       	pop	r18
 7ba:	0f 90       	pop	r0
 7bc:	0f be       	out	0x3f, r0	; 63
 7be:	0f 90       	pop	r0
 7c0:	1f 90       	pop	r1
 7c2:	18 95       	reti

000007c4 <main>:

int main(void)
{
	DDRC = 0xFF;
 7c4:	8f ef       	ldi	r24, 0xFF	; 255
 7c6:	84 bb       	out	0x14, r24	; 20
	DDRD = 0x01;
 7c8:	81 e0       	ldi	r24, 0x01	; 1
 7ca:	81 bb       	out	0x11, r24	; 17

	TWBR = 12;	//(CPU_Clock/SCL_Clock) - 16)/2 = TWBR*(4^TWPS)
 7cc:	8c e0       	ldi	r24, 0x0C	; 12
 7ce:	80 b9       	out	0x00, r24	; 0
	TWSR = 0x00;
 7d0:	11 b8       	out	0x01, r1	; 1

	GICR=0x40;
 7d2:	80 e4       	ldi	r24, 0x40	; 64
 7d4:	8b bf       	out	0x3b, r24	; 59
	MCUCR=0x03;
 7d6:	83 e0       	ldi	r24, 0x03	; 3
 7d8:	85 bf       	out	0x35, r24	; 53
	SREG=0x80;
 7da:	80 e8       	ldi	r24, 0x80	; 128
 7dc:	8f bf       	out	0x3f, r24	; 63

	oled_init();
 7de:	28 df       	rcall	.-432    	; 0x630 <oled_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7e0:	2f ef       	ldi	r18, 0xFF	; 255
 7e2:	80 e7       	ldi	r24, 0x70	; 112
 7e4:	92 e0       	ldi	r25, 0x02	; 2
 7e6:	21 50       	subi	r18, 0x01	; 1
 7e8:	80 40       	sbci	r24, 0x00	; 0
 7ea:	90 40       	sbci	r25, 0x00	; 0
 7ec:	e1 f7       	brne	.-8      	; 0x7e6 <main+0x22>
 7ee:	00 c0       	rjmp	.+0      	; 0x7f0 <main+0x2c>
 7f0:	00 00       	nop
	_delay_ms(1000);

	draw(back_panel);
	*/

	clear();
 7f2:	07 df       	rcall	.-498    	; 0x602 <clear>
	while(1)
	{
		PORTD=0x01;
 7f4:	c1 e0       	ldi	r28, 0x01	; 1
 7f6:	c2 bb       	out	0x12, r28	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7f8:	25 e3       	ldi	r18, 0x35	; 53
 7fa:	2a 95       	dec	r18
 7fc:	f1 f7       	brne	.-4      	; 0x7fa <main+0x36>
 7fe:	00 00       	nop
		_delay_us(10);
		PORTD=0x00;
 800:	12 ba       	out	0x12, r1	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 802:	8f e3       	ldi	r24, 0x3F	; 63
 804:	9c e9       	ldi	r25, 0x9C	; 156
 806:	01 97       	sbiw	r24, 0x01	; 1
 808:	f1 f7       	brne	.-4      	; 0x806 <main+0x42>
 80a:	00 c0       	rjmp	.+0      	; 0x80c <main+0x48>
 80c:	00 00       	nop
		draw_font(86,1,10);
		draw_font(96,1,11);
		_delay_ms(60);
		*/

		draw_large_font(0,0,four);
 80e:	40 91 6e 00 	lds	r20, 0x006E	; 0x80006e <four>
 812:	50 91 6f 00 	lds	r21, 0x006F	; 0x80006f <four+0x1>
 816:	60 e0       	ldi	r22, 0x00	; 0
 818:	70 e0       	ldi	r23, 0x00	; 0
 81a:	80 e0       	ldi	r24, 0x00	; 0
 81c:	90 e0       	ldi	r25, 0x00	; 0
 81e:	9f de       	rcall	.-706    	; 0x55e <draw_large_font>
		draw_large_font(32,0,three);
 820:	40 91 6c 00 	lds	r20, 0x006C	; 0x80006c <three>
 824:	50 91 6d 00 	lds	r21, 0x006D	; 0x80006d <three+0x1>
 828:	60 e0       	ldi	r22, 0x00	; 0
 82a:	70 e0       	ldi	r23, 0x00	; 0
 82c:	80 e2       	ldi	r24, 0x20	; 32
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	96 de       	rcall	.-724    	; 0x55e <draw_large_font>
		draw_large_font(64,0,two);
 832:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <two>
 836:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <two+0x1>
 83a:	60 e0       	ldi	r22, 0x00	; 0
 83c:	70 e0       	ldi	r23, 0x00	; 0
 83e:	80 e4       	ldi	r24, 0x40	; 64
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	8d de       	rcall	.-742    	; 0x55e <draw_large_font>
		draw_large_font(96,0,one);
 844:	40 91 6a 00 	lds	r20, 0x006A	; 0x80006a <one>
 848:	50 91 6b 00 	lds	r21, 0x006B	; 0x80006b <one+0x1>
 84c:	60 e0       	ldi	r22, 0x00	; 0
 84e:	70 e0       	ldi	r23, 0x00	; 0
 850:	80 e6       	ldi	r24, 0x60	; 96
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	84 de       	rcall	.-760    	; 0x55e <draw_large_font>
 856:	9f ef       	ldi	r25, 0xFF	; 255
 858:	2d ee       	ldi	r18, 0xED	; 237
 85a:	82 e0       	ldi	r24, 0x02	; 2
 85c:	91 50       	subi	r25, 0x01	; 1
 85e:	20 40       	sbci	r18, 0x00	; 0
 860:	80 40       	sbci	r24, 0x00	; 0
 862:	e1 f7       	brne	.-8      	; 0x85c <main+0x98>
 864:	00 c0       	rjmp	.+0      	; 0x866 <main+0xa2>
 866:	00 00       	nop
 868:	c6 cf       	rjmp	.-116    	; 0x7f6 <main+0x32>

0000086a <__udivmodhi4>:
 86a:	aa 1b       	sub	r26, r26
 86c:	bb 1b       	sub	r27, r27
 86e:	51 e1       	ldi	r21, 0x11	; 17
 870:	07 c0       	rjmp	.+14     	; 0x880 <__udivmodhi4_ep>

00000872 <__udivmodhi4_loop>:
 872:	aa 1f       	adc	r26, r26
 874:	bb 1f       	adc	r27, r27
 876:	a6 17       	cp	r26, r22
 878:	b7 07       	cpc	r27, r23
 87a:	10 f0       	brcs	.+4      	; 0x880 <__udivmodhi4_ep>
 87c:	a6 1b       	sub	r26, r22
 87e:	b7 0b       	sbc	r27, r23

00000880 <__udivmodhi4_ep>:
 880:	88 1f       	adc	r24, r24
 882:	99 1f       	adc	r25, r25
 884:	5a 95       	dec	r21
 886:	a9 f7       	brne	.-22     	; 0x872 <__udivmodhi4_loop>
 888:	80 95       	com	r24
 88a:	90 95       	com	r25
 88c:	bc 01       	movw	r22, r24
 88e:	cd 01       	movw	r24, r26
 890:	08 95       	ret

00000892 <__divmodhi4>:
 892:	97 fb       	bst	r25, 7
 894:	07 2e       	mov	r0, r23
 896:	16 f4       	brtc	.+4      	; 0x89c <__divmodhi4+0xa>
 898:	00 94       	com	r0
 89a:	06 d0       	rcall	.+12     	; 0x8a8 <__divmodhi4_neg1>
 89c:	77 fd       	sbrc	r23, 7
 89e:	08 d0       	rcall	.+16     	; 0x8b0 <__divmodhi4_neg2>
 8a0:	e4 df       	rcall	.-56     	; 0x86a <__udivmodhi4>
 8a2:	07 fc       	sbrc	r0, 7
 8a4:	05 d0       	rcall	.+10     	; 0x8b0 <__divmodhi4_neg2>
 8a6:	3e f4       	brtc	.+14     	; 0x8b6 <__divmodhi4_exit>

000008a8 <__divmodhi4_neg1>:
 8a8:	90 95       	com	r25
 8aa:	81 95       	neg	r24
 8ac:	9f 4f       	sbci	r25, 0xFF	; 255
 8ae:	08 95       	ret

000008b0 <__divmodhi4_neg2>:
 8b0:	70 95       	com	r23
 8b2:	61 95       	neg	r22
 8b4:	7f 4f       	sbci	r23, 0xFF	; 255

000008b6 <__divmodhi4_exit>:
 8b6:	08 95       	ret

000008b8 <_exit>:
 8b8:	f8 94       	cli

000008ba <__stop_program>:
 8ba:	ff cf       	rjmp	.-2      	; 0x8ba <__stop_program>
